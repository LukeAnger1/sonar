# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import comm_pb2 as comm__pb2

GRPC_GENERATED_VERSION = '1.64.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in comm_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class CommunicationServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetID = channel.unary_unary(
                '/CommunicationServer/GetID',
                request_serializer=comm__pb2.Empty.SerializeToString,
                response_deserializer=comm__pb2.ID.FromString,
                _registered_method=True)
        self.GetSize = channel.unary_unary(
                '/CommunicationServer/GetSize',
                request_serializer=comm__pb2.Empty.SerializeToString,
                response_deserializer=comm__pb2.Size.FromString,
                _registered_method=True)
        self.GetModel = channel.unary_unary(
                '/CommunicationServer/GetModel',
                request_serializer=comm__pb2.ID.SerializeToString,
                response_deserializer=comm__pb2.Model.FromString,
                _registered_method=True)
        self.GetMessage = channel.unary_unary(
                '/CommunicationServer/GetMessage',
                request_serializer=comm__pb2.Message.SerializeToString,
                response_deserializer=comm__pb2.Empty.FromString,
                _registered_method=True)
        self.GetTensor = channel.unary_unary(
                '/CommunicationServer/GetTensor',
                request_serializer=comm__pb2.ID.SerializeToString,
                response_deserializer=comm__pb2.Tensor.FromString,
                _registered_method=True)
        self.SendMessage = channel.unary_unary(
                '/CommunicationServer/SendMessage',
                request_serializer=comm__pb2.Message.SerializeToString,
                response_deserializer=comm__pb2.Empty.FromString,
                _registered_method=True)
        self.SendBye = channel.unary_unary(
                '/CommunicationServer/SendBye',
                request_serializer=comm__pb2.ID.SerializeToString,
                response_deserializer=comm__pb2.Empty.FromString,
                _registered_method=True)


class CommunicationServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTensor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendBye(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommunicationServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetID,
                    request_deserializer=comm__pb2.Empty.FromString,
                    response_serializer=comm__pb2.ID.SerializeToString,
            ),
            'GetSize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSize,
                    request_deserializer=comm__pb2.Empty.FromString,
                    response_serializer=comm__pb2.Size.SerializeToString,
            ),
            'GetModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModel,
                    request_deserializer=comm__pb2.ID.FromString,
                    response_serializer=comm__pb2.Model.SerializeToString,
            ),
            'GetMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessage,
                    request_deserializer=comm__pb2.Message.FromString,
                    response_serializer=comm__pb2.Empty.SerializeToString,
            ),
            'GetTensor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTensor,
                    request_deserializer=comm__pb2.ID.FromString,
                    response_serializer=comm__pb2.Tensor.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=comm__pb2.Message.FromString,
                    response_serializer=comm__pb2.Empty.SerializeToString,
            ),
            'SendBye': grpc.unary_unary_rpc_method_handler(
                    servicer.SendBye,
                    request_deserializer=comm__pb2.ID.FromString,
                    response_serializer=comm__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CommunicationServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('CommunicationServer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CommunicationServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunicationServer/GetID',
            comm__pb2.Empty.SerializeToString,
            comm__pb2.ID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunicationServer/GetSize',
            comm__pb2.Empty.SerializeToString,
            comm__pb2.Size.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunicationServer/GetModel',
            comm__pb2.ID.SerializeToString,
            comm__pb2.Model.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunicationServer/GetMessage',
            comm__pb2.Message.SerializeToString,
            comm__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTensor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunicationServer/GetTensor',
            comm__pb2.ID.SerializeToString,
            comm__pb2.Tensor.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunicationServer/SendMessage',
            comm__pb2.Message.SerializeToString,
            comm__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendBye(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommunicationServer/SendBye',
            comm__pb2.ID.SerializeToString,
            comm__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
